services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dsa3101project
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent DB storage
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  real_time_data:
    build:
      context: .
      dockerfile: scripts/data_generation/Dockerfile
    container_name: real_time_data
    volumes:
      - .:/app
      - ../data:/app/data   # Ensures changes reflect inside the container
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092
    command: ["python", "scripts/data_generation/real_time_data_generation.py"]  # Overrides CMD in Dockerfile

  real_time_data_ingestion:
    build:
      context: .
      dockerfile: scripts/data_ingestion/Dockerfile
    container_name: real_time_data_ingestion
    volumes:
      - .:/app
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092
    command: ["python", "scripts/data_ingestion/real_time_data_ingestion.py"]  # Runs consumer

volumes:
  postgres_data:  
    driver: local
