services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dsa3101project
      POSTGRES_HOST: localhost
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persistent DB storage
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Init script
      - ./customer_segments_full.csv:/csv_files/customer_segments_initial_data.csv  # Mount CSV file directly

  segmentation_service:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: segmentation_service
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    container_name: kafka_producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092  # Ensure this matches your Kafka setup

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    container_name: kafka_consumer
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BROKER: kafka:9092  # Ensure this matches your Kafka setup

volumes:
  postgres_data:  
    driver: local
