services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    # healthcheck:
    #   test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
    #   interval: 10s
    #   retries: 5

  # Optional: PostgreSQL setup (commented out for now)
  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   restart: always
  #   env_file: "../.env"  # Loads credentials from .env
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data  # Persistent DB storage
  #     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Init script

  # Optional: Segmentation API service (commented out for now)
  # segmentation_api:
  #   build: ./segmentation_service
  #   container_name: segmentation_api
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - postgres
  #     - kafka
  #   environment:
  #     - DATABASE_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/banking
  #     - KAFKA_BROKER=kafka:9092

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    container_name: kafka_producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092  # Ensure this matches your Kafka setup

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    container_name: kafka_consumer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092  # Ensure this matches your Kafka setup

volumes:
  postgres_data:  # Keep this if you decide to use PostgreSQL later
